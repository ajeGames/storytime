---
swagger: "2.0"
info:
  description: "Backend for managing choose-your-own-destiny style stories."
  version: "0.2.0"
  title: "StoryTime API"
  termsOfService: "http://www.ajegames.com/blog/terms-of-use/"
  contact:
    name: "AJE Games Support"
    url: "http://www.ajegames.com/blog/support/"
    email: "saynotospam@ajegames.com"
paths:
  /status:
    get:
      tags:
      - "admin"
      description: "Gets information about the status of the StoryTime service."
      operationId: "getStatus"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Admin"
  /members:
    post:
      tags:
      - "clubhouse"
      summary: "Creates a new member of the Clubhouse."
      operationId: "registerMember"
      parameters:
      - in: "body"
        name: "member"
        description: "Member information"
        required: true
        schema:
          $ref: "#/definitions/member"
      responses:
        201:
          description: "Member registered"
          schema:
            $ref: "#/definitions/inline_response_201"
        400:
          description: "Registration failure"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Clubhouse"
  /members/{memberId}:
    get:
      tags:
      - "clubhouse"
      summary: "Gets member information"
      description: "Gets public member information"
      operationId: "getMember"
      parameters:
      - name: "memberId"
        in: "path"
        description: "ID of the member"
        required: true
        type: "string"
      responses:
        200:
          description: "Member found"
          schema:
            $ref: "#/definitions/inline_response_201"
        404:
          description: "Member not found"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Clubhouse"
  /featuredStories:
    get:
      tags:
      - "clubhouse"
      summary: "Gets a list of featured story IDs."
      description: "Gets a list of featured story IDs. Default list is empty."
      operationId: "getFeaturedStories"
      parameters: []
      responses:
        200:
          description: "Story created"
          schema:
            type: "array"
            items:
              type: "string"
      x-swagger-router-controller: "Clubhouse"
    put:
      tags:
      - "admin"
      summary: "Adds and removes featured stories."
      description: "Adds and removes featured stories."
      operationId: "updateFeaturedStories"
      parameters:
      - in: "body"
        name: "toAddRemove"
        description: "List of IDs of stories to feature"
        required: false
        schema:
          $ref: "#/definitions/toAddRemove"
      responses:
        201:
          description: "Story created"
          schema:
            $ref: "#/definitions/inline_response_201_1"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Admin"
    delete:
      tags:
      - "admin"
      summary: "Clears list of featured stories."
      description: "Clears list of featured stories."
      operationId: "clearFeaturedStories"
      parameters: []
      responses:
        200:
          description: "Story created"
      x-swagger-router-controller: "Admin"
  /stories:
    get:
      tags:
      - "storytime"
      summary: "Gets all of the story summaries"
      description: "Gets every story summary. Results might be truncated for paging."
      operationId: "getStorySummaries"
      parameters: []
      responses:
        200:
          description: "Story summaries"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_201_1"
      x-swagger-router-controller: "Storytime"
    post:
      tags:
      - "storytime"
      summary: "Creates new story with given information."
      description: "Creates a story with the information provided, assigning a unique\
        \ key."
      operationId: "createStory"
      parameters:
      - in: "body"
        name: "story"
        description: "Story summary"
        required: true
        schema:
          $ref: "#/definitions/story"
      responses:
        201:
          description: "Story created"
          schema:
            $ref: "#/definitions/inline_response_201_1"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
  /stories/{storyId}:
    get:
      tags:
      - "storytime"
      summary: "Returns story summary for given key"
      description: "Returns the summary of the story indentified by key."
      operationId: "getStorySummary"
      parameters:
      - name: "storyId"
        in: "path"
        description: "unique key of story to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Story found"
          schema:
            $ref: "#/definitions/inline_response_201_1"
        404:
          description: "Story not found"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
    put:
      tags:
      - "storytime"
      summary: "Updates a story summary with given information."
      description: "Creates a story with the information provided, assigning a unique\
        \ key."
      operationId: "updateStorySummary"
      parameters:
      - name: "storyId"
        in: "path"
        description: "unique key of story to update"
        required: true
        type: "string"
      - in: "body"
        name: "story"
        description: "Story summary"
        required: true
        schema:
          $ref: "#/definitions/story_1"
      responses:
        200:
          description: "Story summary updated"
          schema:
            $ref: "#/definitions/inline_response_201_1"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/inline_response_400"
        404:
          description: "Story not found"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
  /stories/{storyId}/chapters:
    get:
      tags:
      - "storytime"
      summary: "Gets all of the chapter of given story"
      description: "Gets every chapter of given story."
      operationId: "getChapters"
      parameters:
      - name: "storyId"
        in: "path"
        description: "key of story to add chapter to"
        required: true
        type: "string"
      responses:
        200:
          description: "Chapter details"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Storytime"
    post:
      tags:
      - "storytime"
      summary: "Creates new chapter with given information."
      description: "Creates a chapter with the information provided, assigning a chapter\
        \ ID."
      operationId: "createChapter"
      parameters:
      - name: "storyId"
        in: "path"
        description: "key of story to add chapter to"
        required: true
        type: "string"
      - in: "body"
        name: "chapter"
        description: "Chapter information"
        required: true
        schema:
          $ref: "#/definitions/chapter"
      responses:
        201:
          description: "Chapter created"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
  /stories/{storyId}/chapters/{chapterId}:
    get:
      tags:
      - "storytime"
      summary: "Retrieves chapter with given ID of story with given key."
      description: "Retrieves chapter with given ID of story with given key."
      operationId: "getChapter"
      parameters:
      - name: "storyId"
        in: "path"
        description: "unique key of story to retrieve"
        required: true
        type: "string"
      - name: "chapterId"
        in: "path"
        description: "chapter ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Chapter found"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        404:
          description: "Chapter not found"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
    put:
      tags:
      - "storytime"
      summary: "Updates chapter with given information."
      description: "Updates the given chapter of given story."
      operationId: "updateChapter"
      parameters:
      - name: "storyId"
        in: "path"
        description: "unique key of story to update"
        required: true
        type: "string"
      - name: "chapterId"
        in: "path"
        description: "chapter ID"
        required: true
        type: "string"
      - in: "body"
        name: "chapter"
        description: "Chapter information"
        required: true
        schema:
          $ref: "#/definitions/chapter_1"
      responses:
        202:
          description: "Chapter updated"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/inline_response_400"
        404:
          description: "Story or chapter not found"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
    patch:
      tags:
      - "storytime"
      summary: "Replaces a portion of the chapter"
      description: "Replaces a portion of the chapter -- the prose, the signpost,\
        \ etc. without touching the rest"
      operationId: "patchChapter"
      parameters:
      - name: "storyId"
        in: "path"
        description: "unique key of story to update"
        required: true
        type: "string"
      - name: "chapterId"
        in: "path"
        description: "chapter ID"
        required: true
        type: "string"
      - in: "body"
        name: "chapter"
        description: "Chapter information"
        required: true
        schema:
          $ref: "#/definitions/chapter_2"
      responses:
        202:
          description: "Chapter patched"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/inline_response_400"
        404:
          description: "Story or chapter not found"
          schema:
            $ref: "#/definitions/inline_response_400"
      x-swagger-router-controller: "Storytime"
definitions:
  Chapter:
    type: "object"
    properties:
      chapterId:
        type: "string"
      title:
        type: "string"
      prose:
        type: "string"
      signpost:
        type: "array"
        items:
          $ref: "#/definitions/storiesstoryIdchapters_signpost"
  ChapterSign:
    type: "object"
    properties:
      destinationId:
        type: "string"
      teaser:
        type: "string"
  Error:
    type: "object"
    properties:
      errorCode:
        type: "string"
      message:
        type: "string"
  FeaturedStoryUpdate:
    type: "object"
    properties:
      toAdd:
        type: "array"
        items:
          type: "string"
      toRemove:
        type: "array"
        items:
          type: "string"
  Member:
    type: "object"
    properties:
      screenName:
        type: "string"
      id:
        type: "string"
      identityProvider:
        type: "string"
      email:
        type: "string"
        format: "email"
      joinedAt:
        type: "string"
        format: "date-time"
      communicationOkay:
        type: "boolean"
  Status:
    type: "object"
    properties:
      salutation:
        type: "string"
      status:
        type: "string"
      version:
        type: "string"
  StorySummary:
    type: "object"
    properties:
      storyId:
        type: "string"
      title:
        type: "string"
      authorId:
        type: "string"
      penName:
        type: "string"
      tagLine:
        type: "string"
      about:
        type: "string"
      firstChapter:
        type: "string"
      draft:
        type: "boolean"
      publishedAt:
        type: "string"
        format: "date-time"
      version:
        type: "integer"
        format: "int32"
      genre:
        type: "array"
        items:
          type: "string"
      category:
        type: "array"
        items:
          type: "string"
  StorySummaryAuthorUpdate:
    type: "object"
    properties:
      storyId:
        type: "string"
      title:
        type: "string"
      penName:
        type: "string"
      tagLine:
        type: "string"
      about:
        type: "string"
      firstChapter:
        type: "string"
      draft:
        type: "boolean"
      genre:
        type: "array"
        items:
          type: "string"
      category:
        type: "array"
        items:
          type: "string"
  inline_response_200:
    properties:
      salutation:
        type: "string"
      status:
        type: "string"
      version:
        type: "string"
  member:
    type: "object"
    properties:
      screenName:
        type: "string"
      id:
        type: "string"
      identityProvider:
        type: "string"
      email:
        type: "string"
        format: "email"
      joinedAt:
        type: "string"
        format: "date-time"
      communicationOkay:
        type: "boolean"
  inline_response_201:
    properties:
      screenName:
        type: "string"
      id:
        type: "string"
      identityProvider:
        type: "string"
      email:
        type: "string"
        format: "email"
      joinedAt:
        type: "string"
        format: "date-time"
      communicationOkay:
        type: "boolean"
  inline_response_400:
    properties:
      errorCode:
        type: "string"
      message:
        type: "string"
  toAddRemove:
    type: "object"
    properties:
      toAdd:
        type: "array"
        items:
          type: "string"
      toRemove:
        type: "array"
        items:
          type: "string"
  inline_response_201_1:
    properties:
      storyId:
        type: "string"
      title:
        type: "string"
      authorId:
        type: "string"
      penName:
        type: "string"
      tagLine:
        type: "string"
      about:
        type: "string"
      firstChapter:
        type: "string"
      draft:
        type: "boolean"
      publishedAt:
        type: "string"
        format: "date-time"
      version:
        type: "integer"
        format: "int32"
      genre:
        type: "array"
        items:
          type: "string"
      category:
        type: "array"
        items:
          type: "string"
  story:
    type: "object"
    properties:
      storyId:
        type: "string"
      title:
        type: "string"
      penName:
        type: "string"
      tagLine:
        type: "string"
      about:
        type: "string"
      firstChapter:
        type: "string"
      draft:
        type: "boolean"
      genre:
        type: "array"
        items:
          type: "string"
      category:
        type: "array"
        items:
          type: "string"
  story_1:
    type: "object"
    properties:
      storyId:
        type: "string"
      title:
        type: "string"
      penName:
        type: "string"
      tagLine:
        type: "string"
      about:
        type: "string"
      firstChapter:
        type: "string"
      draft:
        type: "boolean"
      genre:
        type: "array"
        items:
          type: "string"
      category:
        type: "array"
        items:
          type: "string"
  storiesstoryIdchapters_signpost:
    properties:
      destinationId:
        type: "string"
      teaser:
        type: "string"
  inline_response_200_1:
    properties:
      chapterId:
        type: "string"
      title:
        type: "string"
      prose:
        type: "string"
      signpost:
        type: "array"
        items:
          $ref: "#/definitions/storiesstoryIdchapters_signpost"
  chapter:
    type: "object"
    properties:
      chapterId:
        type: "string"
      title:
        type: "string"
      prose:
        type: "string"
      signpost:
        type: "array"
        items:
          $ref: "#/definitions/storiesstoryIdchapters_signpost"
  chapter_1:
    type: "object"
    properties:
      chapterId:
        type: "string"
      title:
        type: "string"
      prose:
        type: "string"
      signpost:
        type: "array"
        items:
          $ref: "#/definitions/storiesstoryIdchapters_signpost"
  chapter_2:
    type: "object"
    properties:
      chapterId:
        type: "string"
      title:
        type: "string"
      prose:
        type: "string"
      signpost:
        type: "array"
        items:
          $ref: "#/definitions/storiesstoryIdchapters_signpost"
