/*
 * StoryTime API
 * Backend for managing choose-your-own-destiny style stories.
 *
 * OpenAPI spec version: 0.2.0
 * Contact: saynotospam@ajegames.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * Story
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-05-06T21:27:25.790Z")
public class Story   {
  @JsonProperty("storyId")
  private String storyId = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("penName")
  private String penName = null;

  @JsonProperty("tagLine")
  private String tagLine = null;

  @JsonProperty("about")
  private String about = null;

  @JsonProperty("firstChapter")
  private String firstChapter = null;

  @JsonProperty("draft")
  private Boolean draft = null;

  @JsonProperty("genre")
  private List<String> genre = new ArrayList<String>();

  @JsonProperty("category")
  private List<String> category = new ArrayList<String>();

  public Story storyId(String storyId) {
    this.storyId = storyId;
    return this;
  }

   /**
   * Get storyId
   * @return storyId
  **/
  @JsonProperty("storyId")
  @ApiModelProperty(value = "")
  public String getStoryId() {
    return storyId;
  }

  public void setStoryId(String storyId) {
    this.storyId = storyId;
  }

  public Story title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @JsonProperty("title")
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Story penName(String penName) {
    this.penName = penName;
    return this;
  }

   /**
   * Get penName
   * @return penName
  **/
  @JsonProperty("penName")
  @ApiModelProperty(value = "")
  public String getPenName() {
    return penName;
  }

  public void setPenName(String penName) {
    this.penName = penName;
  }

  public Story tagLine(String tagLine) {
    this.tagLine = tagLine;
    return this;
  }

   /**
   * Get tagLine
   * @return tagLine
  **/
  @JsonProperty("tagLine")
  @ApiModelProperty(value = "")
  public String getTagLine() {
    return tagLine;
  }

  public void setTagLine(String tagLine) {
    this.tagLine = tagLine;
  }

  public Story about(String about) {
    this.about = about;
    return this;
  }

   /**
   * Get about
   * @return about
  **/
  @JsonProperty("about")
  @ApiModelProperty(value = "")
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }

  public Story firstChapter(String firstChapter) {
    this.firstChapter = firstChapter;
    return this;
  }

   /**
   * Get firstChapter
   * @return firstChapter
  **/
  @JsonProperty("firstChapter")
  @ApiModelProperty(value = "")
  public String getFirstChapter() {
    return firstChapter;
  }

  public void setFirstChapter(String firstChapter) {
    this.firstChapter = firstChapter;
  }

  public Story draft(Boolean draft) {
    this.draft = draft;
    return this;
  }

   /**
   * Get draft
   * @return draft
  **/
  @JsonProperty("draft")
  @ApiModelProperty(value = "")
  public Boolean getDraft() {
    return draft;
  }

  public void setDraft(Boolean draft) {
    this.draft = draft;
  }

  public Story genre(List<String> genre) {
    this.genre = genre;
    return this;
  }

  public Story addGenreItem(String genreItem) {
    this.genre.add(genreItem);
    return this;
  }

   /**
   * Get genre
   * @return genre
  **/
  @JsonProperty("genre")
  @ApiModelProperty(value = "")
  public List<String> getGenre() {
    return genre;
  }

  public void setGenre(List<String> genre) {
    this.genre = genre;
  }

  public Story category(List<String> category) {
    this.category = category;
    return this;
  }

  public Story addCategoryItem(String categoryItem) {
    this.category.add(categoryItem);
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @JsonProperty("category")
  @ApiModelProperty(value = "")
  public List<String> getCategory() {
    return category;
  }

  public void setCategory(List<String> category) {
    this.category = category;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Story story = (Story) o;
    return Objects.equals(this.storyId, story.storyId) &&
        Objects.equals(this.title, story.title) &&
        Objects.equals(this.penName, story.penName) &&
        Objects.equals(this.tagLine, story.tagLine) &&
        Objects.equals(this.about, story.about) &&
        Objects.equals(this.firstChapter, story.firstChapter) &&
        Objects.equals(this.draft, story.draft) &&
        Objects.equals(this.genre, story.genre) &&
        Objects.equals(this.category, story.category);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storyId, title, penName, tagLine, about, firstChapter, draft, genre, category);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Story {\n");
    
    sb.append("    storyId: ").append(toIndentedString(storyId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    penName: ").append(toIndentedString(penName)).append("\n");
    sb.append("    tagLine: ").append(toIndentedString(tagLine)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    firstChapter: ").append(toIndentedString(firstChapter)).append("\n");
    sb.append("    draft: ").append(toIndentedString(draft)).append("\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

