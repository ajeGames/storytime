swagger: '2.0'
info:
  title: StoryTime API
  description: Backend for managing choose-your-own-destiny style stories.
  termsOfService: http://www.ajegames.com/blog/terms-of-use/
  contact:
    name: AJE Games Support
    url: http://www.ajegames.com/blog/support/
    email: saynotospam@ajegames.com
  version: 0.1.0
paths:
  /status:
    get:
      tags:
        - admin
      operationId: getStatus
      description: Gets information about the status of the StoryTime service.
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Status'
  /stories:
    post:
      summary: Creates new story with given information.
      description: Creates a story with the information provided, assigning a unique key.
      operationId: createStory
      parameters:
        - name: story
          in: body
          description: Story summary
          required: true
          schema:
            $ref: '#/definitions/StorySummary'
      responses:
        '201':
          description: Story created
          schema:
            $ref: '#/definitions/StorySummary'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Gets all of the story summaries
      description: Gets every story summary. Results might be truncated for paging.
      operationId: getSummaries
      responses:
        '200':
          description: Story summaries
          schema:
            type: array
            items:
              $ref: '#/definitions/StorySummary'
  /stories/{storyKey}:
    get:
      summary: Returns story summary for given key
      description: Returns the summary of the story indentified by key.
      operationId: getStory
      parameters:
        - name: storyKey
          in: path
          description: unique key of story to retrieve
          required: true
          type: string
      responses:
        '200':
          description: Story found
          schema:
            $ref: '#/definitions/StorySummary'
        '404':
          description: Story not found
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Creates new story with given information.
      description: Creates a story with the information provided, assigning a unique key.
      operationId: updateStory
      parameters:
        - name: storyKey
          in: path
          description: unique key of story to update
          required: true
          type: string
        - name: story
          in: body
          description: Story summary
          required: true
          schema:
            $ref: '#/definitions/StorySummary'
      responses:
        '200':
          description: Story updated
          schema:
            $ref: '#/definitions/StorySummary'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Story not found
          schema:
            $ref: '#/definitions/Error'
  '/stories/{storyKey}/chapters':
    post:
      summary: Creates new chapter with given information.
      description: Creates a chapter with the information provided, assigning a chapter ID.
      operationId: createChapter
      parameters:
        - name: storyKey
          in: path
          description: key of story to add chapter to
          required: true
          type: string
        - name: chapter
          in: body
          description: Chapter information
          required: true
          schema:
            $ref: '#/definitions/Chapter'
      responses:
        '201':
          description: Chapter created
          schema:
            $ref: '#/definitions/Chapter'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Gets all of the chapter of given story
      description: Gets every chapter of given story.
      operationId: getChapters
      parameters:
        - name: storyKey
          in: path
          description: key of story to add chapter to
          required: true
          type: string
      responses:
        '200':
          description: Chapter details
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
  '/stories/{storyKey}/chapters/{chapterId}':
    get:
      summary: Retrieves chapter with given ID of story with given key.
      description: Retrieves chapter with given ID of story with given key.
      operationId: getChapter
      parameters:
        - name: storyKey
          in: path
          description: unique key of story to retrieve
          required: true
          type: string
        - name: chapterId
          in: path
          description: chapter ID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Chapter found
          schema:
            $ref: '#/definitions/Chapter'
        '404':
          description: Chapter not found
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Updates chapter with given information.
      description: Updates the given chapter of given story.
      operationId: updateChapter
      parameters:
        - name: storyKey
          in: path
          description: unique key of story to update
          required: true
          type: string
        - name: chapterId
          in: path
          description: chapter ID
          required: true
          type: integer
          format: int32
        - name: chapter
          in: body
          description: Chapter information
          required: true
          schema:
            $ref: '#/definitions/Chapter'
      responses:
        '202':
          description: Chapter updated
          schema:
            $ref: '#/definitions/Chapter'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Story not found
          schema:
            $ref: '#/definitions/Error'
definitions:
  Status:
    type: object
    properties:
      salutation:
        type: string
      status:
        type: string
      version:
        type: string
  Error:
    type: object
    properties:
      errorCode:
        type: string
      message:
        type: string
  StorySummary:
    type: object
    properties:
      key:
        type: string
      title:
        type: string
      author:
        type: string
      tagLine:
        type: string
      about:
        type: string
  Chapter:
    type: object
    properties:
      chapterId:
        type: integer
        format: int32
      title:
        type: string
      prose:
        type: string
      signPost:
        type: array
        items:
          $ref: '#/definitions/ChapterSign'
  ChapterSign:
    type: object
    properties:
      chapterId:
        type: integer
        format: int32
      teaser:
        type: string
