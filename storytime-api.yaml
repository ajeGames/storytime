swagger: '2.0'

info:
  title: Storytime API
  description: An RESTful interface to the Storytime server, enabling all manner of choose-your-own-destiny games.
  termsOfService: http://www.ajegames.com/terms/
  contact:
    name: AJEGames Support
    url: http://www.ajegames.com/support/
    email: support@ajegames.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0.0"
host: www.ajegames.com
basePath: /storytime/api/v1
schemes:
  - http
produces:
  - application/json

paths:
  /storytime:
    get:
      tags:
        - story
        - admin
      summary: Ping server to see if it is responsive.
      description:
        Can be called to determine if the server is responding to requests in general.  Returns the message 'pong' if alive.  Anonymous access is expected.
      operationId: ping
      responses:
        '200':
          description: The message 'pong'
          schema:
            type: string
  /storytime/stories:
    get:
      summary: Returns summaries of all available stories.
      description:
        Retrieves array of summaries of all published stories.  This is for use by 'reader' clients as a simple means for browsing the catalog of stories.  At some point, this will have to be refactored to handle the millions of published stories.  Anonymous access to this list is expected.
      operationId: findPublishedStories
      responses:
        '200':
          description: An array of summaries of published stories.
          schema:
            type: array
            items:
              $ref: '#/definitions/StorySummary'
  /story:
    post:
      tags:
        - story
      summary: Creates a new story on the server.
      description:
        Creates a story from the data provided, assigning a unique key in the process.  Must be invoked by a user with 'author' priviledges.
      operationId: createStory
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/StorySummary"
      responses:
        "405":
          description: Invalid input
    put:
      tags:
        - story
      summary: Update an existing pet
      description: ""
      operationId: updatePet
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/StorySummary"
      responses:
        "400":
          description: Invalid ID supplied

definitions:
  StorySummary:
    type: object
    properties:
      key:
        type: string
      title:
        type: string
      author:
        type: string
      tagLine:
        type: string
      about:
        type: string
      firstChapter:
        $ref: '#/definitions/ChapterSign'
  ChapterSign:
    type: object
    properties:
      targetChapterId:
        type: integer
        format: int32
      teaser:
        type: string
